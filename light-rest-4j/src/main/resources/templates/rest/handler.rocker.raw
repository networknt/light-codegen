@import org.apache.commons.text.StringEscapeUtils
@import java.util.Map
@import java.util.List
@option discardLogicWhitespace=true
@args (String handlerPackage, String className, String statusCode, String example, List<Map> parameters)
package @handlerPackage;

import com.networknt.handler.LightHttpHandler;
import io.undertow.server.HttpServerExchange;
import io.undertow.util.HttpString;
import java.util.HashMap;
import java.util.Map;

/**
For more information on how to write business handlers, please check the link below.
https://doc.networknt.com/development/business-handler/rest/
*/
public class @className implements LightHttpHandler {
    @if(parameters != null && !parameters.isEmpty()) {/**@for (parameter : parameters) {
     * @@param @?parameter.get("name") @if(parameter.get("type") != null)
     { @with (String typeStr = ((String)parameter.get("type")).substring(0, 1).toUpperCase()+((String)parameter.get("type")).substring(1))
       { @?typeStr  }} @if ( parameter.get("required") != null && parameter.get("required").equals("true") ) {@@Required } else{@@Optional }@if(parameter.get("minLength") != null){minLength:@parameter.get("minLength");}@if(parameter.get("maxLength") != null) {maxLength:@parameter.get("maxLength");}@if(parameter.get("description") != null ){
     *           @parameter.get("description")}}
     */}
    @@Override
    public void handleRequest(HttpServerExchange exchange) throws Exception {
        @if(example != null) {
        exchange.getResponseHeaders().add(new HttpString("Content-Type"), "application/json");
        exchange.setStatusCode(@statusCode);
        @with (e = StringEscapeUtils.escapeJson(example)) {exchange.getResponseSender().send("@e");}
        } else {
        exchange.endExchange();
        }
    }
}
