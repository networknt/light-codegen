@import com.fasterxml.jackson.databind.JsonNode
@args (JsonNode config, String handlerPackage, String jsonPath, String serviceId, Boolean enableHttp, String httpPort, Boolean enableHttps, String httpsPort, Boolean enableHttp2, Boolean enableRegistry, String version)
#--------------------------------------------------------------------------------
# values.yml : Set of values commonly overridden in microservices
#--------------------------------------------------------------------------------

# client.yml

# server.yml
server.serviceId: @serviceId
server.httpPort: @httpPort
server.enableHttp: @enableHttp
server.httpsPort: @httpsPort
server.enableHttps: @enableHttps
server.enableHttp2: @enableHttp2
server.enableRegistry: @enableRegistry
server.buildNumber: @version


# security.yml
security.enableVerifyJwt: false

# rpc-router.yml
rpc-router.handlerPackage: @handlerPackage
rpc-router.jsonPath: @jsonPath

# service.yml
# Singleton service factory configuration/IoC injection
service.singletons:
# StartupHookProvider implementations, there are one to many and they are called in the same sequence defined.
- com.networknt.server.StartupHookProvider:
  # registry all service handlers by from annotations
  - com.networknt.rpc.router.RpcStartupHookProvider
  @if(config.get("kafkaProducer").booleanValue()){
  # Kafka producer startup hook example
  # - net.lightapi.portal.user.command.UserCommandStartup
  }
  @if(config.get("kafkaConsumer").booleanValue()){
  # Kafka consumer startup hook example
  # - net.lightapi.portal.user.query.UserQueryStartup
  }
# ShutdownHookProvider implementations, there are one to many and they are called in the same sequence defined.
- com.networknt.server.ShutdownHookProvider:
  @if(config.get("kafkaProducer").booleanValue()){
  # Kafka producer startup hook example
  # - net.lightapi.portal.user.command.UserCommandShutdown
  }
  @if(config.get("kafkaConsumer").booleanValue()){
  # Kafka consumer startup hook example
  # - net.lightapi.portal.user.query.UserQueryShutdown
  }
@if(config.get("kafkaProducer").booleanValue()){
# Kafka Producer instance
- com.networknt.kafka.producer.NativeLightProducer:
  - com.networknt.kafka.producer.SidecarProducer
}
@if(config.get("kafkaStreams").booleanValue()){
- com.networknt.kafka.streams.LightStreams:
  # Kafka streams processor example
  # - net.lightapi.portal.user.query.UserQueryStreams
}
@if(config.get("kafkaStreams").booleanValue()||config.get("kafkaProducer").booleanValue()||config.get("kafkaConsumer").booleanValue()){
# Schema registry client
- io.confluent.kafka.schemaregistry.client.SchemaRegistryClient:
  - com.networknt.kafka.common.LightSchemaRegistryClient
}
